name: Build & deploy Next.js app to Azure Web App

# When this action will be executed
on:
  # Automatically trigger it when detected changes in repo
  push:
    branches: [main]

  # Allow manual workflow trigger
  workflow_dispatch:
    inputs:
      templateRelease:
        description: 'What (existing or NEW) release tag to point the Helper to'
        type: string
        required: true
      createRelease:
        description: 'Create a NEW release with that tag'
        type: boolean
        required: true
        default: true

env:
  templateRelease: ${{ github.event.inputs.templateRelease }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: 🌱 Checkout to the branch
        uses: actions/checkout@v3

      - name: 🍏 Set up Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"

      - name: ⚙️ npm install and build
        run: |
          cd ./src
          npm install
          npm run build --if-present
          cd ..

      - name: 📂 Copy standalone into the root
        run: cp -R ./src/.next/standalone ./site-deploy

      - name: 📂 Copy static into the .next folder
        run: cp -R ./src/.next/static ./site-deploy/.next/static

      - name: 📂 Copy Public folder
        run: cp -R ./src/public ./site-deploy/public

      - name: 📦 Package Next application
        run: |
          cd ./site-deploy
          zip Nextjs-site.zip ./* .next -qr      
          
      - name: 🔍 Diagnostics
        run: |
          ls ./src
          ls ./src/.next
          ls ./site-deploy

      - name: ⬆️ Publish Next Application artifact
        uses: actions/upload-artifact@v3
        with:
          name: Nextjs-site
          path: ./site-deploy/Nextjs-site.zip
  
  CreateRelease:
    runs-on: ubuntu-latest
    name: Create a Release
    needs: [build]
    if: ${{ github.event.inputs.createRelease == 'true' }}
    steps:
      - uses: actions/checkout@v3.3.0

      - name: ⬇️ Download artifact from build job
        uses: actions/download-artifact@v3
        if: ${{ github.event.inputs.createRelease == 'true' }}
        with:
          name: Nextjs-site

      - name: Check that the GitHub release does not already exist
        run: |
          GHJSON=$(gh release view ${{env.templateRelease}} --json name) || GHJSON=""

          if [ -z "$GHJSON" ]
          then
                echo "Release not found - great"
          else
                echo "Release already exists - aborting"
                exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

      - name: Create GitHub release
        run: |
          GHJSON=$(gh release create ${{env.templateRelease}} '${{ github.workspace }}/Nextjs-site.zip' --latest --generate-notes )
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   environment:
  #     name: "Production"

  #   steps:
  #     - name: ⬇️ Download artifact from build job
  #       uses: actions/download-artifact@v3
  #       with:
  #         name: Nextjs-site

  #     - name: 🗝️ Azure Login
  #       uses: azure/login@v1
  #       with:
  #         creds: ${{ secrets.AZURE_CREDENTIALS }}

  #     - name: 🚀 Deploy to Azure Web App
  #       id: deploy-to-webapp
  #       uses: azure/webapps-deploy@v2
  #       with:
  #         app-name: ${{ secrets.AZURE_APP_SERVICE_NAME }}
  #         package: ${{ github.workspace }}/Nextjs-site.zip

  #     - name: Publish a Release
  #       id: publish-release
  #       uses: softprops/action-gh-release@v1
  #       if: startsWith(github.ref, 'refs/tags/')
  #       with:
  #         files: |
  #           ${{ github.workspace }}/Nextjs-site.zip

  #     - name: 🧹 Cleanup
  #       run: rm ${{ github.workspace }}/Nextjs-site.zip
